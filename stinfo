#!/bin/bash

DIR=$(cd $(dirname $0); pwd -P)
source ${DIR}/config.sh
source ${DIR}/include.sh

JQ="${DIR}/jq"

function usage {
  echo "USAGE $(basename $0)"
  exit 1
}

function auth_fail {
	echo "Login to Splunk failed"
  rm -f $DIR/.sessionkey
  rm -f $DIR/.error
  exit 1
}

function query {
  curl -sk -H "Authorization: Splunk $SESSION_KEY" "https://localhost:${MGMTPORT}${1}?output_mode=json" | ${JQ} -r "${2}" 2>$DIR/.error
  if [ -s $DIR/.error ]; then
  	auth_fail
  fi
}

function out {
  printf "%-18s: %s\n" "${1}" "${2}"
}

if [ ! -f $DIR/.sessionkey ]; then
	read -p "Username: " USER
	read -sp "Password: " PW
	echo ""
	SESSION_KEY=$(curl -sk "https://localhost:${MGMTPORT}/services/auth/login?output_mode=json" --data-urlencode username="$USER" --data-urlencode password="$PW" | ${JQ} -r '.sessionKey')
	echo "$SESSION_KEY" > $DIR/.sessionkey
else
	SESSION_KEY=$(cat $DIR/.sessionkey)
fi
if [ "$SESSION_KEY" == "null" -o ! -s $DIR/.sessionkey ]; then
	auth_fail
fi

GUID=$(cat $SPLHOME/etc/instance.cfg | grep -E "^guid" | cut -d '=' -f 2 | tr -d ' ')
out "GUID:" "$GUID"
HOST=$(query "/services/server/settings" '.entry[0] | .content.host')
out "Host" "$HOST"
SN=$(query "/services/server/settings" '.entry[0] | .content.serverName')
out "Server Name" "$SN"
ROLES=$(query "/services/server/roles" '.entry[0].content.role_list | join(", ")')
out "Roles" "$ROLES"
WEBPORT=$(query "/services/server/settings" '.entry[0] | .content.httpport')
out "Web Port" "$WEBPORT"
MGMTPORT=$(query "/services/server/settings" '.entry[0] | .content.mgmtHostPort')
out "Mgmt Port" "$MGMTPORT"
KVPORT=$(query "/services/server/settings" '.entry[0] | .content.kvStorePort')
out "KV Store Port" "$KVPORT"
KVDIS=$(query "/services/server/settings" '.entry[0] | .content.kvStoreDisabled')
out "KV Store Disabled" "$KVDIS"
SPLHOME=$(query "/services/server/settings" '.entry[0] | .content.SPLUNK_HOME')
out "Splunk Home" "$SPLHOME"
SPLDB=$(query "/services/server/settings" '.entry[0] | .content.SPLUNK_DB')
out "Splunk DB" "$SPLDB"
